{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\Complete Projects\\\\Quizzes\\\\React\\\\src\\\\components\\\\Quizzes\\\\Popup\\\\Popup.js\",\n  _s = $RefreshSig$();\nimport styles from \"./Popup.module.css\";\nimport Input from \"./Input\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Popup({\n  popUpHandler,\n  questionHandler\n}) {\n  _s();\n  const [options, setOptions] = useState([\"\", \"\"]);\n  const [question, setQuestion] = useState(\"\");\n  function addOption() {\n    setOptions([...options, \"\"]);\n  }\n  function editOption(newText, index) {\n    let newOptions = [...options];\n    newOptions[index] = newText;\n    setOptions(newOptions);\n    console.log(\"Popup -> newOptions\", newOptions);\n  }\n  function editQuestion(newText) {\n    setQuestion(newText);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.background,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.top,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.heading,\n          children: \"Add Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.closeIcon,\n          onClick: () => {\n            popUpHandler();\n          },\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            strokeWidth: 1.5,\n            stroke: \"currentColor\",\n            className: \"w-6 h-6\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              d: \"M6 18L18 6M6 6l12 12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.content,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          label: \"Question\",\n          type: \"text\",\n          val: question,\n          editOption: editQuestion,\n          ind: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.optionBox,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.heading,\n            children: \"Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), options.map((option, index) => {\n            return /*#__PURE__*/_jsxDEV(Input, {\n              label: `Option ${index + 1}`,\n              type: \"text\",\n              editOption: editOption,\n              ind: index\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            value: \"Add Option\",\n            className: styles.addOption,\n            onClick: () => addOption()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Sumbit\",\n        className: styles.submit,\n        onClick: () => {\n          questionHandler(question, options);\n          popUpHandler();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Popup, \"5+6dZTHvZx37wziy8gUnYByNHlg=\");\n_c = Popup;\nvar _c;\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"names":["styles","Input","useState","jsxDEV","_jsxDEV","Popup","popUpHandler","questionHandler","_s","options","setOptions","question","setQuestion","addOption","editOption","newText","index","newOptions","console","log","editQuestion","className","background","children","container","top","heading","fileName","_jsxFileName","lineNumber","columnNumber","closeIcon","onClick","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","content","label","type","val","ind","optionBox","map","option","value","submit","_c","$RefreshReg$"],"sources":["E:/Projects/Complete Projects/Quizzes/React/src/components/Quizzes/Popup/Popup.js"],"sourcesContent":["import styles from \"./Popup.module.css\";\r\nimport Input from \"./Input\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Popup({ popUpHandler, questionHandler }) {\r\n  const [options, setOptions] = useState([\"\", \"\"]);\r\n  const [question, setQuestion] = useState(\"\");\r\n\r\n  function addOption() {\r\n    setOptions([...options, \"\"]);\r\n  }\r\n  function editOption(newText, index) {\r\n    let newOptions = [...options];\r\n    newOptions[index] = newText;\r\n    setOptions(newOptions);\r\n    console.log(\"Popup -> newOptions\", newOptions);\r\n  }\r\n  function editQuestion(newText) {\r\n    setQuestion(newText);\r\n  }\r\n  return (\r\n    <div className={styles.background}>\r\n      <div className={styles.container}>\r\n        <div className={styles.top}>\r\n          <span className={styles.heading}>Add Question</span>\r\n          <div\r\n            className={styles.closeIcon}\r\n            onClick={() => {\r\n              popUpHandler();\r\n            }}\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              strokeWidth={1.5}\r\n              stroke=\"currentColor\"\r\n              className=\"w-6 h-6\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                d=\"M6 18L18 6M6 6l12 12\"\r\n              />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n        <div className={styles.content}>\r\n          <Input\r\n            label=\"Question\"\r\n            type=\"text\"\r\n            val={question}\r\n            editOption={editQuestion}\r\n            ind={0}\r\n          />\r\n          <div className={styles.optionBox}>\r\n            <span className={styles.heading}>Options</span>\r\n            {options.map((option, index) => {\r\n              return (\r\n                <Input\r\n                  key={index}\r\n                  label={`Option ${index + 1}`}\r\n                  type=\"text\"\r\n                  editOption={editOption}\r\n                  ind={index}\r\n                />\r\n              );\r\n            })}\r\n            <input\r\n              type=\"button\"\r\n              value=\"Add Option\"\r\n              className={styles.addOption}\r\n              onClick={() => addOption()}\r\n            />\r\n          </div>\r\n        </div>\r\n        <input\r\n          type=\"button\"\r\n          value=\"Sumbit\"\r\n          className={styles.submit}\r\n          onClick={() => {\r\n            questionHandler(question, options);\r\n            popUpHandler();\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,oBAAoB;AACvC,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,KAAKA,CAAC;EAAEC,YAAY;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAC/D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EAChD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,SAASW,SAASA,CAAA,EAAG;IACnBH,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAE,EAAE,CAAC,CAAC;EAC9B;EACA,SAASK,UAAUA,CAACC,OAAO,EAAEC,KAAK,EAAE;IAClC,IAAIC,UAAU,GAAG,CAAC,GAAGR,OAAO,CAAC;IAC7BQ,UAAU,CAACD,KAAK,CAAC,GAAGD,OAAO;IAC3BL,UAAU,CAACO,UAAU,CAAC;IACtBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,UAAU,CAAC;EAChD;EACA,SAASG,YAAYA,CAACL,OAAO,EAAE;IAC7BH,WAAW,CAACG,OAAO,CAAC;EACtB;EACA,oBACEX,OAAA;IAAKiB,SAAS,EAAErB,MAAM,CAACsB,UAAW;IAAAC,QAAA,eAChCnB,OAAA;MAAKiB,SAAS,EAAErB,MAAM,CAACwB,SAAU;MAAAD,QAAA,gBAC/BnB,OAAA;QAAKiB,SAAS,EAAErB,MAAM,CAACyB,GAAI;QAAAF,QAAA,gBACzBnB,OAAA;UAAMiB,SAAS,EAAErB,MAAM,CAAC0B,OAAQ;UAAAH,QAAA,EAAC;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACpD1B,OAAA;UACEiB,SAAS,EAAErB,MAAM,CAAC+B,SAAU;UAC5BC,OAAO,EAAEA,CAAA,KAAM;YACb1B,YAAY,CAAC,CAAC;UAChB,CAAE;UAAAiB,QAAA,eAEFnB,OAAA;YACE6B,KAAK,EAAC,4BAA4B;YAClCC,IAAI,EAAC,MAAM;YACXC,OAAO,EAAC,WAAW;YACnBC,WAAW,EAAE,GAAI;YACjBC,MAAM,EAAC,cAAc;YACrBhB,SAAS,EAAC,SAAS;YAAAE,QAAA,eAEnBnB,OAAA;cACEkC,aAAa,EAAC,OAAO;cACrBC,cAAc,EAAC,OAAO;cACtBC,CAAC,EAAC;YAAsB;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACN1B,OAAA;QAAKiB,SAAS,EAAErB,MAAM,CAACyC,OAAQ;QAAAlB,QAAA,gBAC7BnB,OAAA,CAACH,KAAK;UACJyC,KAAK,EAAC,UAAU;UAChBC,IAAI,EAAC,MAAM;UACXC,GAAG,EAAEjC,QAAS;UACdG,UAAU,EAAEM,YAAa;UACzByB,GAAG,EAAE;QAAE;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,eACF1B,OAAA;UAAKiB,SAAS,EAAErB,MAAM,CAAC8C,SAAU;UAAAvB,QAAA,gBAC/BnB,OAAA;YAAMiB,SAAS,EAAErB,MAAM,CAAC0B,OAAQ;YAAAH,QAAA,EAAC;UAAO;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EAC9CrB,OAAO,CAACsC,GAAG,CAAC,CAACC,MAAM,EAAEhC,KAAK,KAAK;YAC9B,oBACEZ,OAAA,CAACH,KAAK;cAEJyC,KAAK,EAAG,UAAS1B,KAAK,GAAG,CAAE,EAAE;cAC7B2B,IAAI,EAAC,MAAM;cACX7B,UAAU,EAAEA,UAAW;cACvB+B,GAAG,EAAE7B;YAAM,GAJNA,KAAK;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKX,CAAC;UAEN,CAAC,CAAC,eACF1B,OAAA;YACEuC,IAAI,EAAC,QAAQ;YACbM,KAAK,EAAC,YAAY;YAClB5B,SAAS,EAAErB,MAAM,CAACa,SAAU;YAC5BmB,OAAO,EAAEA,CAAA,KAAMnB,SAAS,CAAC;UAAE;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACN1B,OAAA;QACEuC,IAAI,EAAC,QAAQ;QACbM,KAAK,EAAC,QAAQ;QACd5B,SAAS,EAAErB,MAAM,CAACkD,MAAO;QACzBlB,OAAO,EAAEA,CAAA,KAAM;UACbzB,eAAe,CAACI,QAAQ,EAAEF,OAAO,CAAC;UAClCH,YAAY,CAAC,CAAC;QAChB;MAAE;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtB,EAAA,CApFuBH,KAAK;AAAA8C,EAAA,GAAL9C,KAAK;AAAA,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}